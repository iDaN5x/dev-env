---
- name: Check if Oh My Zsh is installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: ohmyzsh_stat

- name: Install Oh-my-zsh
  ansible.builtin.shell:
    cmd: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  register: install_ohmyzsh
  when: not ohmyzsh_stat.stat.exists
  changed_when: install_ohmyzsh.rc == 0
  failed_when: install_ohmyzsh.rc != 0

- name: Install OhMyZsh plugins from brew.
  community.general.homebrew:
    name: >-
      {{
        shell_ohmyzsh_plugins |
        selectattr('formula', 'defined') |
        map(attribute='formula') |
        list
      }}
    state: latest

- name: Install OhMyZsh plugins from git repositories.
  ansible.builtin.git:
    repo: "{{ plugin.repo }}"
    dest: "{{ shell_ohmyzsh_plugins_dir }}/{{ plugin.name }}"
    clone: true
    update: true
    version: master
  when: plugin.get('repo', None)
  loop: >-
    {{
      shell_ohmyzsh_plugins |
      selectattr('repo', 'defined') |
      map(attribute='repo') |
      list
    }}
  loop_control:
    loop_var: plugin
    label: clone plugin {{ plugin.name }}

- name: Enable OhMyZsh in .zshrc
  vars:
    section:
      name: OhMyZsh
      content: "{{ lookup('template', 'ohmyzsh-zshrc-section.j2') }}"
      interactive: true
  ansible.builtin.set_fact:
    shell_init_sections:
      "{{ shell_init_sections | default([]) + [section] }}"

- name: Enable OhMyZsh plugins
  when: shell_use_ohmyzsh | default(false)
  vars:
    plugin:
      name: git
  ansible.builtin.set_fact:
    shell_ohmyzsh_extra_plugins:
      "{{ shell_ohmyzsh_extra_plugins | default([]) + [plugin] }}"
