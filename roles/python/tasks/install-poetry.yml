---
- name: Detect Poetry installation
  ansible.builtin.command: which poetry
  register: which_poetry
  changed_when: false
  failed_when: false

- name: Install Poetry
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -sSL https://install.python-poetry.org | python -
  register: poetry_install
  changed_when: poetry_install.rc == 0
  failed_when: poetry_install.rc != 0
  when: which_poetry.rc != 0
  # noqa: command-instead-of-module

- name: Enable Poetry
  vars:
    section:
      name: Enable Poetry.
      content: export PATH=$HOME/.local/bin:$PATH
  ansible.builtin.set_fact:
    shell_zprofile_sections:
      "{{ shell_zprofile_sections | default([]) + [section] }}"

- name: Check if Poetry terminal completion is enabled.
  ansible.builtin.stat:
    path: "{{ shell_ohmyzsh_plugins_dir }}/poetry/_poetry"
  register: pyenv_completion_script

- name: Create Poetry terminal completion init script
  ansible.builtin.shell: >
    mkdir -p {{ shell_ohmyzsh_plugins_dir }}/poetry &&
    poetry completions zsh > {{ shell_ohmyzsh_plugins_dir }}/poetry/_poetry
  register: pyenv_completions
  when: not pyenv_completion_script.stat.exists
  changed_when: pyenv_completions.rc != 0
  failed_when: pyenv_completions.rc != 0

- name: Enable Poetry-env OhMyZsh completion
  when: shell_use_ohmyzsh
  vars:
    plugin:
      name: poetry-env
  ansible.builtin.set_fact:
    shell_ohmyzsh_plugins:
      "{{ shell_ohmyzsh_plugins | default([]) + [plugin] }}"
