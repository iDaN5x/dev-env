---
- name: Detect Poetry installation
  ansible.builtin.command: which poetry
  register: which_poetry
  changed_when: false
  failed_when: false

- name: Install Poetry
  when: which_poetry.rc != 0
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -sSL https://install.python-poetry.org | python -
  register: poetry_install
  changed_when: poetry_install.rc == 0
  failed_when: poetry_install.rc != 0
  # noqa: command-instead-of-module

- name: Enable Poetry
  vars:
    section:
      name: Enable Poetry.
      content: export PATH="$HOME/.local/bin:$PATH"
      interactive_only: false
  ansible.builtin.set_fact:
    shell_init_sections:
      "{{ shell_init_sections | default([]) + [section] }}"

- name: Create Poetry completions script target folder
  ansible.builtin.file:
    path: "{{ python_poetry_completions_script | dirname }}"
    state: directory
    mode: "0755"

- name: Generate Poetry terminal completion script
  ansible.builtin.command: $HOME/.local/bin/poetry completions
  register: poetry_completions
  changed_when: false
  failed_when: poetry_completions.rc != 0

- name: Save completions script
  ansible.builtin.copy:
    content: "{{ poetry_completions.stdout }}"
    dest: "{{ python_poetry_completions_script }}"
    mode: "0755"

- name: Enable Poetry-env OhMyZsh completion
  when: shell_use_ohmyzsh | default(false)
  vars:
    plugin:
      name: poetry-env
  ansible.builtin.set_fact:
    shell_ohmyzsh_extra_plugins:
      "{{ shell_ohmyzsh_extra_plugins | default([]) + [plugin] }}"
